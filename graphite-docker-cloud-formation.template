{
    "AWSTemplateFormatVersion": "2010-09-09",

    "Description": "Graphite Docker Cloud Formation Template",

    "Parameters": {

        "KeyName": {
            "Description"          : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type"                 : "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair.",
            "Default"              : "vinh"
        },

        "InstanceType": {
            "Description"          : "Container Instance type",
            "Type"                 : "String",
            "Default"              : "t2.micro",
            "AllowedValues"        : ["t2.micro", "t2.small", "t2.medium", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge" ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },

        "VolumeSize": {
            "Description": "Storage size (GB)",
            "Type"       : "Number",
            "Default"    : 100,
            "ConstraintDescription": "must be a valid number."
        },

        "HtpasswdString": {
            "Description": ".htpasswd String",
            "Type"       : "String",
            "Default"    : "<htpasswd>"
        },

        "GraphiteHostedZoneName": {
            "Description": "Hosted Zone Name",
            "Type"       : "String",
            "Default"    : "core.zalora.io."
        },

        "GraphiteSubDomain": {
            "Description": "Sub Domain Name",
            "Type"       : "String",
            "Default"    : "graphite"
        },

        "GraphiteDockerRepository": {
            "Description": "Docker Repository",
            "Type"       : "String",
            "Default"    : "zalora/graphite-web:latest"
        },

        "GraphiteElasticIP": {
            "Description": "Elastic IP",
            "Type"       : "String",
            "Default"    : "52.64.25.88"
        },

        "DockerHubAuthToken": {
            "Description": "Docker Hub Auth Token",
            "Type"       : "String",
            "Default"    : "<docker-hub-auth>"
        },

        "DockerHubEmail": {
            "Description": "Docker Hub Email",
            "Type"       : "String",
            "Default"    : "hung.vjnh@gmail.com"
        },

        "GraphiteSnapshotId": {
            "Description": "Snapshot Id",
            "Type"       : "String",
            "Default"    : ""
        }

    },

    "Mappings": {

        "AWSRegionToAMI": {
            "us-east-1"     : {"AMIID": "ami-ddc7b6b7"},
            "us-west-2"     : {"AMIID": "ami-c188b0f1"},
            "eu-west-1"     : {"AMIID": "ami-3db4ca4a"},
            "ap-northeast-1": {"AMIID": "ami-3077525e"},
            "ap-southeast-2": {"AMIID": "ami-23b4eb40"}
        }

    },

    "Conditions": {

        "UseSnapshot": {
            "Fn::Not": [{
                "Fn::Equals": [
                    {"Ref": "GraphiteSnapshotId"},
                    ""
                ]
            }]
        }

    },

    "Resources": {

        "IPAssoc" : {
            "Type" : "AWS::EC2::EIPAssociation",
            "Properties" : {
                "InstanceId" : {
                    "Ref" : "GraphiteInstance"
                },
                "EIP" : {
                    "Ref": "GraphiteElasticIP"
                }
            }
        },

        "SecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Allowed Ports",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort"  : 80,
                        "ToPort"    : 80,
                        "CidrIp"    : "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort"  : 22,
                        "ToPort"    : 22,
                        "CidrIp"    : "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort"  : 8125,
                        "ToPort"    : 8125,
                        "CidrIp"    : "0.0.0.0/0"
                    }
                ]
            }
        },

        "GraphiteInstance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "IamInstanceProfile": "ecsInstanceRole",
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSRegionToAMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMIID"
                    ]
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "SecurityGroups": [
                    {
                        "Ref":"SecurityGroup"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",

                                "yum install -y aws-cfn-bootstrap\n",

                                "/opt/aws/bin/cfn-init -v ",
                                "         --stack ", {"Ref": "AWS::StackName"},
                                "         --resource GraphiteInstance ",
                                "         --region ", {"Ref": "AWS::Region"}, "\n"
                            ]
                        ]
                    }
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "default": ["1", "2"]
                    },
                    "1": {
                        "commands": {
                            "mountEsbVolume": {
                                "command": {"Fn::Join": ["", [
                                    "#!/bin/bash\n",
                                    "echo \"Defaults !requiretty\" >> /etc/sudoers\n",
                                    {
                                        "Fn::If": [
                                            "UseSnapshot",
                                            "",
                                            "sudo mkfs -t ext4 /dev/sdh\n"
                                        ]
                                    },
                                    "sudo mkdir /data\n",
                                    "sudo mount /dev/sdh /data\n",
                                    "sudo echo \"/dev/sdh /data ext4 defaults,nofail 0 2\" >> /etc/fstab\n"
                                ]]}
                            }
                        }
                    },
                    "2": {
                        "commands": {
                            "addInstanceToCluster": {
                                "command": {"Fn::Join": ["", [
                                    "#!/bin/bash\n",
                                    "echo ECS_CLUSTER=",
                                    {"Ref": "GraphiteCluster"},
                                    " >> /etc/ecs/ecs.config"
                                ]]}
                            },
                            "addDockerAuthToCluster": {
                                "command": {"Fn::Join": ["", [
                                    "#!/bin/bash\n",
                                    "echo 'ECS_ENGINE_AUTH_TYPE=dockercfg\nECS_ENGINE_AUTH_DATA={\"https://index.docker.io/v1/\":{\"auth\":\"",
                                    {"Ref": "DockerHubAuthToken"},
                                    "\",\"email\":\"",
                                    {"Ref": "DockerHubEmail"},
                                    "\"}}'", " >> /etc/ecs/ecs.config"
                                ]]}
                            },
                            "createVolumes": {
                                "command": {"Fn::Join": ["", [
                                    "#!/bin/bash\n",
                                    "mkdir -p /data/graphite/graphite/storage/whisper\n",
                                    "echo '",
                                    {"Ref": "HtpasswdString"},
                                    "' >> /home/ec2-user/.htpasswd"
                                ]]}
                            }
                        },
                        "files": {
                            "/etc/cfn/cfn-hup.conf": {
                                "content": {"Fn::Join": ["", [
                                    "[main]\n",
                                    "stack=", {"Ref": "AWS::StackId"}, "\n",
                                    "region=", {"Ref": "AWS::Region"}, "\n"
                                ]]},
                                "mode"   : "000400",
                                "owner"  : "root",
                                "group"  : "root"
                            },
                            "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                                "content": {"Fn::Join": ["", [
                                    "[cfn-auto-reloader-hook]\n",
                                    "triggers=post.update\n",
                                    "path=Resources.GraphiteInstances.Metadata.AWS::CloudFormation::Init\n",
                                    "action=/opt/aws/bin/cfn-init -v ",
                                    "         --stack ", {"Ref": "AWS::StackName"},
                                    "         --resource GraphiteInstance ",
                                    "         --region ", {"Ref": "AWS::Region"}, "\n",
                                    "runas=root\n"
                                ]]}
                            }
                        },

                        "services": {
                            "sysvinit": {
                                "cfn-hup": {"enabled": "true", "ensureRunning": "true", "files": ["/etc/cfn/cfn-hup.conf", "/etc/cfn/hooks.d/cfn-auto-reloader.conf"]}
                            }
                        }
                    }
                }
            }
        },

        "GraphiteVolume": {
            "Type": "AWS::EC2::Volume",
            "Properties": {
                "Size": {
                    "Ref": "VolumeSize"
                },
                "SnapshotId": {
                    "Fn::If": [
                        "UseSnapshot",
                        {"Ref": "GraphiteSnapshotId"},
                        {"Ref": "AWS::NoValue"}
                    ]
                },
                "VolumeType": "gp2",
                "AvailabilityZone": {
                    "Fn::GetAtt": ["GraphiteInstance", "AvailabilityZone"]
                }
            },
            "DeletionPolicy" : "Snapshot"
        },

        "MountPoint" : {
            "Type": "AWS::EC2::VolumeAttachment",
            "Properties": {
                "InstanceId": {
                    "Ref" : "GraphiteInstance"
                },
                "VolumeId": {
                    "Ref" : "GraphiteVolume"
                },
                "Device": "/dev/sdh"
            }
        },

        "GraphiteCluster": {
            "Type": "AWS::ECS::Cluster"
        },

        "TaskDefinition": {
            "Type": "AWS::ECS::TaskDefinition",
            "Properties": {
                "ContainerDefinitions": [
                    {
                        "Name"       : "Graphite",
                        "Cpu"        : "512",
                        "Essential"  : "true",
                        "Image"      : {
                            "Ref": "GraphiteDockerRepository"
                        },
                        "Memory"     :"256",
                        "MountPoints": [
                            {
                                "ContainerPath": "/opt/graphite/storage/whisper",
                                "SourceVolume" : "graphite"
                            },
                            {
                                "ContainerPath": "/etc/nginx/.htpasswd",
                                "SourceVolume" : "htpasswd"
                            }
                        ],
                        "PortMappings": [
                            {"HostPort": 80,   "ContainerPort": 80},
                            {"HostPort": 2003, "ContainerPort": 2003},
                            {"HostPort": 8125, "ContainerPort": 8125},
                            {"HostPort": 8126, "ContainerPort": 8126}
                        ]
                    }
                ],
                "Volumes": [
                    {
                        "Name": "graphite",
                        "Host": {
                            "SourcePath": "/data/graphite/graphite/storage/whisper"
                        }
                    },
                    {
                        "Name": "htpasswd",
                        "Host": {
                            "SourcePath": "/home/ec2-user/.htpasswd"
                        }
                    }
                ]
            }
        },

        "Service": {
            "Type"      : "AWS::ECS::Service",
            "DependsOn" : ["GraphiteInstance"],
            "Properties": {
                "Cluster"       : {"Ref": "GraphiteCluster"},
                "DesiredCount"  : "1",
                "TaskDefinition": {"Ref":"TaskDefinition"}
            }
        },

        "DNSRecords": {
            "Type": "AWS::Route53::RecordSetGroup",
            "Properties": {
                "HostedZoneName": {
                    "Ref": "GraphiteHostedZoneName"
                },
                "RecordSets": [
                    {
                        "Name": {
                            "Fn::Join": ["", [
                                    {"Ref": "GraphiteSubDomain"},
                                    ".",
                                    {"Ref": "GraphiteHostedZoneName"}
                                ]
                            ]
                        },
                        "Type": "A",
                        "TTL": "300",
                        "ResourceRecords": [{"Ref": "GraphiteElasticIP"}]
                    }
                ]
            }
        }
    },

    "Outputs": {
        "InstanceId": {
            "Description": "InstanceId of the newly created EC2 instance",
            "Value": {"Ref": "GraphiteInstance"}
        },
        "AZ": {
            "Description": "Availability Zone of the newly created EC2 instance",
            "Value": {"Fn::GetAtt": ["GraphiteInstance", "AvailabilityZone"]}
        },
        "PublicDNS": {
            "Description": "Public DNSName of the newly created EC2 instance",
            "Value": {"Fn::GetAtt": ["GraphiteInstance", "PublicDnsName"]}
        },
        "PublicIP": {
            "Description": "Public IP address of the newly created EC2 instance",
            "Value": {"Fn::GetAtt": ["GraphiteInstance", "PublicIp"]}
        },
        "ECSInstance": {
            "Description": "Location for Amazon ECS Instance",
            "Value": {"Fn::Join": ["", ["ssh ec2-user@", {"Fn::GetAtt": ["GraphiteInstance", "PublicDnsName"]}]]}
        }
    }
}
